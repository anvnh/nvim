-- Theme loader utility
local M = {}

-- Load saved theme or use default
function M.load_theme(default_theme)
  local config_file = vim.fn.stdpath('config') .. '/theme_config.lua'
  local ok, config = pcall(dofile, config_file)
  
  if ok and config and config.theme then
    vim.o.background = config.background or "dark"
    vim.cmd("colorscheme " .. config.theme)
    return config.theme
  else
    vim.cmd.colorscheme(default_theme)
    return default_theme
  end
end

-- Save theme configuration
function M.save_theme(theme, background)
  local config_file = vim.fn.stdpath('config') .. '/theme_config.lua'
  local content = string.format([[
-- Auto-generated theme configuration
-- Do not edit this file manually

return {
  theme = "%s",
  background = "%s",
}
]], theme, background or "dark")
  
  local file = io.open(config_file, 'w')
  if file then
    file:write(content)
    file:close()
  end
end

-- Load theme configuration
function M.load_theme_config()
  local config_file = vim.fn.stdpath('config') .. '/theme_config.lua'
  local ok, config = pcall(dofile, config_file)
  if ok and config then
    return config.theme, config.background
  end
  return nil, nil
end

return M
